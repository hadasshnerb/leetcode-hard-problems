class Solution(object):
    def trap(self, height):
        if not height:
            return 0

        left = 0
        right = len(height) - 1
        left_max = 0
        right_max = 0
        water_trapped = 0

        while left < right:
            if height[left] < height[right]:
                if height[left] >= left_max:
                    left_max = height[left]  # Update left_max if current bar is higher
                else:
                    water_trapped += left_max - height[left]  # Add trapped water above current bar
                left += 1  # Move left pointer to the right
            else:
                if height[right] >= right_max:
                    right_max = height[right]  # Update right_max if current bar is higher
                else:
                    water_trapped += right_max - height[right]  # Add trapped water above current bar
                right -= 1  # Move right pointer to the left

        return water_trapped
